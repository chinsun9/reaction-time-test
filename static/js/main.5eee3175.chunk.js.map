{"version":3,"sources":["component/useKeydownEffect.tsx","component/Main.tsx","component/Start.tsx","static/rank.ts","component/Result.tsx","component/SideTab.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useKeydownEffect","callback","useEffect","keydownHandler","e","key","length","test","window","addEventListener","removeEventListener","Main","setPage","onClickHandler","useCallback","type","onClick","Start","setRootHistory","useState","isFirst","setIsFirst","state","setState","isClick","setIsClick","history","setHistory","t0","setT0","process","prev","newState","push","Date","now","getClassName","baseClassName","renderText","h1Text","pText","genText","sto","setTimeout","Math","random","clearTimeout","className","id","max","value","aria-hidden","onMouseDown","map","idx","time","title","desc","Result","reduce","p","c","avgReactionTime","msg","setMsg","onReplayHandler","index","rank","renderRsultMessage","toFixed","onKeyDown","ev","console","log","SideTab","href","target","viewBox","focusable","data-icon","width","height","fill","d","App","page","renderPage","curPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAEO,SAASA,EAAiBC,GAC/BC,qBAAU,WACR,IAAMC,EAAiB,SAACC,IACN,MAAVA,EAAEC,KAAiC,IAAjBD,EAAEC,IAAIC,QAAgB,WAAWC,KAAKH,EAAEC,OAEhEJ,KAKF,OAFAO,OAAOC,iBAAiB,UAAWN,GAE5B,WACLK,OAAOE,oBAAoB,UAAWP,MAEvC,CAACF,I,WCaSU,MApBf,YAAmC,IAAnBC,EAAkB,EAAlBA,QACRC,EAAiBC,uBAAY,WACjCF,EAAQ,WACP,CAACA,IAMJ,OAJAZ,GAAiB,WACfY,EAAQ,YAIR,qCACE,6EAEA,wBAAQG,KAAK,SAASC,QAASH,EAA/B,iD,OC+GSI,MA3Hf,YAAoD,IAAnCL,EAAkC,EAAlCA,QAASM,EAAyB,EAAzBA,eAAyB,EACnBC,oBAAS,GADU,mBAC1CC,EAD0C,KACjCC,EADiC,OAEvBF,mBAAS,GAFc,mBAE1CG,EAF0C,KAEnCC,EAFmC,OAGnBJ,oBAAS,GAHU,mBAG1CK,EAH0C,KAGjCC,EAHiC,OAInBN,mBAAmB,IAJA,mBAI1CO,EAJ0C,KAIjCC,EAJiC,OAK7BR,mBAAS,GALoB,mBAK1CS,EAL0C,KAKtCC,EALsC,KAO3CC,EAAUhB,uBAAY,WAG1B,GAFAW,GAAW,GAEPL,EACFC,GAAW,QAKb,GAAKG,EAAL,CAKA,GAAIF,EAAQ,GAAK,EAGf,OAFAJ,EAAeQ,QACfd,EAAQ,UAMVe,GAAW,SAACI,GACV,IAAMC,EAAQ,YAAOD,GAErB,OADAC,EAASC,KAAKC,KAAKC,MAAQP,GACpBI,KAETT,GAAS,SAACQ,GAAD,OAAUA,EAAO,UAjBxBR,GAAS,SAACQ,GAAD,OAAUA,EAAO,OAkB3B,CAACL,EAASF,EAASJ,EAASR,EAASM,EAAgBI,EAAOM,IAE/D5B,GAAiB,WACf8B,OAGF,IAAMM,EAAetB,uBAAY,WAC/B,IAAMuB,EAAgB,QAEtB,OAAIjB,EACKiB,EAID,GAAN,OAAUA,EADRb,EACF,MAGF,WACC,CAACA,EAASJ,IAEPkB,EAAaxB,uBAAY,WAC7B,IADmC,EACnB,WACd,IAAIyB,EAAS,eACTC,EAAQ,uCAEZ,OAAIpB,EAEK,CAAEmB,OADTA,EAAS,eACQC,SAGdhB,EAME,CAAEe,SAAQC,SAHR,CAAED,OAFTA,EAAS,eAEQC,MADjBA,EAAQ,8EAOcC,GAAlBF,EAnB2B,EAmB3BA,OAAQC,EAnBmB,EAmBnBA,MAEhB,OACE,qCACE,6BAAKD,IACL,4BAAIC,SAGP,CAAChB,EAASJ,IAgBb,OAdAlB,qBAAU,WACR,IAAMwC,EAAMC,YAAW,WACrBlB,GAAW,KACV,KAA+B,KAAvBmB,KAAKC,SAAW,KAM3B,OAJIrB,GACFK,EAAMK,KAAKC,OAGN,WACLW,aAAaJ,MAEd,CAAClB,EAASF,IAGX,qCACE,sBAAKyB,UAAU,QAAf,UAAwBzB,EAAxB,QACA,0BAAU0B,GAAG,WAAWC,IAAI,IAAIC,MAAO5B,IAEvC,qBAAKyB,UAAWX,IAAgBe,eAAA,EAAYC,YAAatB,EAAzD,SACGQ,MAGH,qBAAKS,UAAU,UAAf,SACE,qBAAKA,UAAU,OAAf,SACGrB,EAAQ2B,KAAI,SAACH,EAAOI,GACnB,IAAMjD,EAAM6C,EAAQI,EACpB,OACE,sBAAKP,UAAU,OAAf,UACGO,EAAM,EADT,8BACmBJ,EADnB,OAA2B7C,cCzH1B,GACb,CAAEkD,KAAM,IAAKC,MAAO,kBAASC,KAAM,OACnC,CAAEF,KAAM,IAAKC,MAAO,kBAASC,KAAM,UACnC,CAAEF,KAAM,IAAKC,MAAO,mBAAUC,KAAM,gBACpC,CAAEF,KAAM,IAAKC,MAAO,kBAASC,KAAM,kBACnC,CACEF,KAAM,IACNC,MAAO,kBACPC,KAAM,uGC4EKC,MA1Ef,YAA8C,IAA5B9C,EAA2B,EAA3BA,QAASc,EAAkB,EAAlBA,QAAkB,EACjBP,mBACxBO,EAAQiC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAAKnC,EAAQpB,QADxCwD,EADoC,sBAIrB3C,mBAAS,CAAEqC,MAAO,IAAKC,KAAM,0BAJR,mBAIpCM,EAJoC,KAI/BC,EAJ+B,KAMrCC,EAAkBnD,uBAAY,WAClCF,EAAQ,UACP,CAACA,IAwBJ,OAtBAZ,GAAiB,WACfY,EAAQ,WAGVV,qBAAU,YACmB,WACzB,IAAK,IAAIgE,EAAQ,EAAGA,EAAQC,EAAK7D,OAAQ4D,GAAS,EAAG,CAAC,IAAD,EACrBC,EAAKD,GAA3BX,EAD2C,EAC3CA,KAAMC,EADqC,EACrCA,MAAOC,EAD8B,EAC9BA,KAErB,GAAIK,GAAmBP,EAErB,YADAS,EAAO,CAAER,QAAOC,SALW,MAUPU,EAAKA,EAAK7D,OAAS,GAAnCkD,EAVuB,EAUvBA,MAAOC,EAVgB,EAUhBA,KACfO,EAAO,CAAER,QAAOC,SAGlBW,KACC,CAACN,IAGF,qCACE,qBAAKf,UAAU,UAWf,0FAEA,sBAAKA,UAAU,SAAf,UACE,6BAAKe,EAAgBO,QAAQ,KAC7B,yCAGF,sBAAKtB,UAAU,MAAf,UACE,kFACA,mBAAGA,UAAU,OAAb,SAAqBgB,EAAIP,QACzB,oDACA,mBAAGT,UAAU,WAAb,SAAyBgB,EAAIN,UAG/B,qBAAKV,UAAU,SAAf,SACE,wBACEhC,KAAK,SACLC,QAASiD,EACTK,UAAW,SAACC,GACVC,QAAQC,IAAI,CAAEF,QAJlB,+DCpEO,SAASG,IACtB,OACE,qBAAK3B,UAAU,UAAf,SACE,qBAAKA,UAAU,WAAf,SACE,mBACE4B,KAAK,iDACLC,OAAO,kBAFT,SAIE,qBACEC,QAAQ,gBACRC,UAAU,QACV/B,UAAU,GACVgC,YAAU,SACVC,MAAM,MACNC,OAAO,MACPC,KAAK,eACL/B,cAAY,OARd,SAUE,sBAAMgC,EAAE,ypBCgBLC,MA5Bf,WAAgB,IAAD,EACWjE,mBAAe,QAD1B,mBACNkE,EADM,KACAzE,EADA,OAEiBO,mBAAmB,IAFpC,mBAENO,EAFM,KAEGC,EAFH,KAIP2D,EAAaxE,uBACjB,SAACyE,GACC,OAAQA,GACN,IAAK,OACH,OAAO,cAAC,EAAD,CAAM3E,QAASA,IACxB,IAAK,QACH,OAAO,cAAC,EAAD,CAAOA,QAASA,EAASM,eAAgBS,IAClD,IAAK,SACH,OAAO,cAAC,EAAD,CAAQf,QAASA,EAASc,QAASA,IAC5C,QACE,MAAO,QAGb,CAACA,IAGH,OACE,qCACE,qBAAKqB,UAAU,MAAf,SAAsBuC,EAAWD,KACjC,cAACX,EAAD,QChBSc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5eee3175.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\n\r\nexport function useKeydownEffect(callback: () => void) {\r\n  useEffect(() => {\r\n    const keydownHandler = (e: KeyboardEvent): void => {\r\n      if (!(e.key === ' ' || (e.key.length === 1 && /[a-zA-Z]/.test(e.key))))\r\n        return;\r\n      callback();\r\n    };\r\n\r\n    window.addEventListener('keydown', keydownHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', keydownHandler);\r\n    };\r\n  }, [callback]);\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport { Page } from '../types';\r\nimport { useKeydownEffect } from './useKeydownEffect';\r\n\r\ntype Props = {\r\n  setPage: React.Dispatch<React.SetStateAction<Page>>;\r\n};\r\n\r\nfunction Main({ setPage }: Props) {\r\n  const onClickHandler = useCallback(() => {\r\n    setPage('start');\r\n  }, [setPage]);\r\n\r\n  useKeydownEffect(() => {\r\n    setPage('start');\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h1>반응속도 테스트</h1>\r\n\r\n      <button type=\"button\" onClick={onClickHandler}>\r\n        테스트 시작\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Page } from '../types';\r\nimport { useKeydownEffect } from './useKeydownEffect';\r\n\r\ntype Props = {\r\n  setPage: React.Dispatch<React.SetStateAction<Page>>;\r\n  setRootHistory: React.Dispatch<React.SetStateAction<number[]>>;\r\n};\r\n\r\nfunction Start({ setPage, setRootHistory }: Props) {\r\n  const [isFirst, setIsFirst] = useState(true);\r\n  const [state, setState] = useState(0);\r\n  const [isClick, setIsClick] = useState(true);\r\n  const [history, setHistory] = useState<number[]>([]);\r\n  const [t0, setT0] = useState(0);\r\n\r\n  const process = useCallback(() => {\r\n    setIsClick(false);\r\n\r\n    if (isFirst) {\r\n      setIsFirst(false);\r\n      return;\r\n    }\r\n\r\n    // 클릭하면 안돼\r\n    if (!isClick) {\r\n      setState((prev) => prev - 1);\r\n      return;\r\n    }\r\n\r\n    if (state + 1 >= 5) {\r\n      setRootHistory(history);\r\n      setPage('result');\r\n      return;\r\n    }\r\n\r\n    // 정상 클릭\r\n    // 히스토리 추가\r\n    setHistory((prev) => {\r\n      const newState = [...prev];\r\n      newState.push(Date.now() - t0);\r\n      return newState;\r\n    });\r\n    setState((prev) => prev + 1);\r\n  }, [history, isClick, isFirst, setPage, setRootHistory, state, t0]);\r\n\r\n  useKeydownEffect(() => {\r\n    process();\r\n  });\r\n\r\n  const getClassName = useCallback(() => {\r\n    const baseClassName = 'start';\r\n\r\n    if (isFirst) {\r\n      return baseClassName;\r\n    }\r\n\r\n    if (isClick) {\r\n      return `${baseClassName} go`;\r\n    }\r\n\r\n    return `${baseClassName} wait`;\r\n  }, [isClick, isFirst]);\r\n\r\n  const renderText = useCallback(() => {\r\n    const genText = () => {\r\n      let h1Text = '클릭';\r\n      let pText = '클릭해주세요';\r\n\r\n      if (isFirst) {\r\n        h1Text = '시작';\r\n        return { h1Text, pText };\r\n      }\r\n\r\n      if (!isClick) {\r\n        h1Text = '준비';\r\n        pText = '초록색이 되면 클릭해주세요';\r\n        return { h1Text, pText };\r\n      }\r\n\r\n      return { h1Text, pText };\r\n    };\r\n\r\n    const { h1Text, pText } = genText();\r\n\r\n    return (\r\n      <>\r\n        <h1>{h1Text}</h1>\r\n        <p>{pText}</p>\r\n      </>\r\n    );\r\n  }, [isClick, isFirst]);\r\n\r\n  useEffect(() => {\r\n    const sto = setTimeout(() => {\r\n      setIsClick(true);\r\n    }, 1500 + (Math.random() - 0.5) * 1000);\r\n\r\n    if (isClick) {\r\n      setT0(Date.now());\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(sto);\r\n    };\r\n  }, [isClick, state]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"label\">{state}/5</div>\r\n      <progress id=\"progress\" max=\"5\" value={state} />\r\n\r\n      <div className={getClassName()} aria-hidden onMouseDown={process}>\r\n        {renderText()}\r\n      </div>\r\n\r\n      <div className=\"history\">\r\n        <div className=\"list\">\r\n          {history.map((value, idx) => {\r\n            const key = value + idx;\r\n            return (\r\n              <div className=\"item\" key={key}>\r\n                {idx + 1}번째 시도: {value}ms\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Start;\r\n","export default [\r\n  { time: 100, title: '상위 1%', desc: 'wow' },\r\n  { time: 200, title: '상위 5%', desc: '굳' },\r\n  { time: 400, title: '상위 50%', desc: '평범' },\r\n  { time: 600, title: '하위 5%', desc: '느려..' },\r\n  {\r\n    time: 800,\r\n    title: '하위 1%',\r\n    desc: '반응속도가 너무 느립니다. 불가능한 ...',\r\n  },\r\n];\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport rank from '../static/rank';\r\nimport { Page } from '../types';\r\nimport { useKeydownEffect } from './useKeydownEffect';\r\n\r\ntype Props = {\r\n  setPage: React.Dispatch<React.SetStateAction<Page>>;\r\n  history: number[];\r\n};\r\n\r\nfunction Result({ setPage, history }: Props) {\r\n  const [avgReactionTime] = useState(\r\n    history.reduce((p, c) => p + c, 0) / history.length\r\n  );\r\n  const [msg, setMsg] = useState({ title: '-', desc: '계산중...' });\r\n\r\n  const onReplayHandler = useCallback(() => {\r\n    setPage('main');\r\n  }, [setPage]);\r\n\r\n  useKeydownEffect(() => {\r\n    setPage('main');\r\n  });\r\n\r\n  useEffect(() => {\r\n    const renderRsultMessage = () => {\r\n      for (let index = 0; index < rank.length; index += 1) {\r\n        const { time, title, desc } = rank[index];\r\n\r\n        if (avgReactionTime <= time) {\r\n          setMsg({ title, desc });\r\n          return;\r\n        }\r\n      }\r\n\r\n      const { title, desc } = rank[rank.length - 1];\r\n      setMsg({ title, desc });\r\n    };\r\n\r\n    renderRsultMessage();\r\n  }, [avgReactionTime]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"share\">\r\n        {/* <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            console.log('share');\r\n          }}\r\n        >\r\n          결과 공유하기\r\n        </button> */}\r\n      </div>\r\n\r\n      <h2>반응속도 테스트 결과</h2>\r\n\r\n      <div className=\"result\">\r\n        <h1>{avgReactionTime.toFixed(2)}</h1>\r\n        <span>ms</span>\r\n      </div>\r\n\r\n      <div className=\"msg\">\r\n        <p>당신의 반응속도는</p>\r\n        <p className=\"rank\">{msg.title}</p>\r\n        <p>입니다.</p>\r\n        <p className=\"rank-msg\">{msg.desc}</p>\r\n      </div>\r\n\r\n      <div className=\"replay\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={onReplayHandler}\r\n          onKeyDown={(ev) => {\r\n            console.log({ ev });\r\n          }}\r\n        >\r\n          테스트 다시하기\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","import React from 'react';\r\n\r\nexport default function SideTab() {\r\n  return (\r\n    <div className=\"sidetab\">\r\n      <div className=\"sideItem\">\r\n        <a\r\n          href=\"https://github.com/chinsun9/reaction-time-test\"\r\n          target=\"chinsun9 github\"\r\n        >\r\n          <svg\r\n            viewBox=\"64 64 896 896\"\r\n            focusable=\"false\"\r\n            className=\"\"\r\n            data-icon=\"github\"\r\n            width=\"1em\"\r\n            height=\"1em\"\r\n            fill=\"currentColor\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <path d=\"M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9a127.5 127.5 0 0 1 38.1 91v112.5c.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z\" />\r\n          </svg>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport './App.scss';\r\nimport Main from './component/Main';\r\nimport Start from './component/Start';\r\nimport Result from './component/Result';\r\nimport { Page } from './types';\r\nimport SideTab from './component/SideTab';\r\n\r\nfunction App() {\r\n  const [page, setPage] = useState<Page>('main');\r\n  const [history, setHistory] = useState<number[]>([]);\r\n\r\n  const renderPage = useCallback(\r\n    (curPage: Page) => {\r\n      switch (curPage) {\r\n        case 'main':\r\n          return <Main setPage={setPage} />;\r\n        case 'start':\r\n          return <Start setPage={setPage} setRootHistory={setHistory} />;\r\n        case 'result':\r\n          return <Result setPage={setPage} history={history} />;\r\n        default:\r\n          return 'no';\r\n      }\r\n    },\r\n    [history]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"App\">{renderPage(page)}</div>\r\n      <SideTab />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}